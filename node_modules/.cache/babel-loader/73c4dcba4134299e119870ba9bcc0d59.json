{"ast":null,"code":"var _jsxFileName = \"/Users/ericknuque/Desktop/budget-tracker/src/context/GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer'; //Initial State - negative number is expense - positive is the budget\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  transactions: [] // Sample data for testing \n  // transactions: [\n  //   {\n  //     id: 1,\n  //     text: \"Budget\",\n  //     amount: 100\n  //   },\n  //   {\n  //     id: 2,\n  //     text: \"Phone\",\n  //     amount: -20\n  //   },\n  //   {\n  //     id: 3,\n  //     text: \"Food\",\n  //     amount: -10\n  //   },\n  //   {\n  //     id: 4,\n  //     text: \"Gas\",\n  //     amount: -20\n  //   }\n  // ]\n\n}; //Create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); //Provider Components\n//Children are everything wrapped in container App function - detsructuring the children\n\nexport const GlobalProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AppReducer, initialState); //Actions\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}; // export const GlobalState = () => {\n//   return (\n//     <div>GlobalState</div>\n//   )\n// }\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/Users/ericknuque/Desktop/budget-tracker/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialState","transactions","GlobalContext","GlobalProvider","children","state","dispatch","deleteTransaction","id","type","payload","addTransaction","transaction"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;AAEnBC,EAAAA,YAAY,EAAE,EAFK,CAInB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AA7BmB,CAArB,C,CAgCA;;AACA,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAACG,YAAD,CAAnC,C,CAEP;AACA;;AACA,OAAO,MAAMG,cAAc,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAE9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACC,UAAD,EAAaC,YAAb,CAApC,CAF8C,CAI9C;;AACA,WAASO,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID;;AAED,WAASG,cAAT,CAAwBC,WAAxB,EAAqC;AACnCN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;;AAGD,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC7BX,MAAAA,YAAY,EAAEI,KAAK,CAACJ,YADS;AAE7BM,MAAAA,iBAF6B;AAG7BI,MAAAA;AAH6B,KAA/B;AAAA,cAKGP;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA9BM,C,CAgCP;AACA;AACA;AACA;AACA;;GApCaD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer } from 'react'\nimport AppReducer from './AppReducer';\n\n//Initial State - negative number is expense - positive is the budget\nconst initialState = {\n\n  transactions: []\n\n  // Sample data for testing \n  // transactions: [\n  //   {\n  //     id: 1,\n  //     text: \"Budget\",\n  //     amount: 100\n  //   },\n\n  //   {\n  //     id: 2,\n  //     text: \"Phone\",\n  //     amount: -20\n  //   },\n\n  //   {\n  //     id: 3,\n  //     text: \"Food\",\n  //     amount: -10\n  //   },\n\n  //   {\n  //     id: 4,\n  //     text: \"Gas\",\n  //     amount: -20\n  //   }\n  // ]\n}\n\n//Create context\nexport const GlobalContext = createContext(initialState);\n\n//Provider Components\n//Children are everything wrapped in container App function - detsructuring the children\nexport const GlobalProvider = ({ children }) => {\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  //Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n\n  return (\n    <GlobalContext.Provider value={{\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    }}>\n      {children}\n    </GlobalContext.Provider>\n  )\n\n}\n\n// export const GlobalState = () => {\n//   return (\n//     <div>GlobalState</div>\n//   )\n// }\n"]},"metadata":{},"sourceType":"module"}